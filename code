from flask import Flask, request, jsonify
import requests
import sqlite3

app = Flask(__name__)

# Database setup
def init_db():
    conn = sqlite3.connect("api_data.db")
    cursor = conn.cursor()
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS api_logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        endpoint TEXT,
        response TEXT,
        status_code INTEGER,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )
    """)
    conn.commit()
    conn.close()

init_db()

# External API integration
EXTERNAL_API_URL = "https://jsonplaceholder.typicode.com/posts"

@app.route("/fetch-data", methods=["GET"])
def fetch_data():
    response = requests.get(EXTERNAL_API_URL)
    
    if response.status_code == 200:
        save_log("/fetch-data", response.text, response.status_code)
        return jsonify(response.json())
    else:
        return jsonify({"error": "Failed to fetch data"}), response.status_code

# Save API logs to database
def save_log(endpoint, response, status_code):
    conn = sqlite3.connect("api_data.db")
    cursor = conn.cursor()
    cursor.execute("INSERT INTO api_logs (endpoint, response, status_code) VALUES (?, ?, ?)", 
                   (endpoint, response, status_code))
    conn.commit()
    conn.close()

@app.route("/logs", methods=["GET"])
def get_logs():
    conn = sqlite3.connect("api_data.db")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM api_logs ORDER BY timestamp DESC")
    logs = cursor.fetchall()
    conn.close()
    return jsonify(logs)

if __name__ == "__main__":
    app.run(debug=True)
